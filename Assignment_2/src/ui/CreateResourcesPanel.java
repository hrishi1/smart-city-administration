/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.CityDir;
import model.Community;
import model.CommunityDir;
import model.Hospital;
import model.HospitalDir;
import model.House;
import model.HouseDir;
import model.UserAuthDir;

/**
 *
 * @author hrish
 */
public class CreateResourcesPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateResourcesPanel
     */
    
    private CityDir cityDir;
    private JSplitPane splitPane;
    private UserAuthDir userAuthDir;
    private String cityName;
    private String state;
    private String communityName;
    private String religion;
    private String communityType;
    private String hospitalName;
    private int rating;
    private String hospitalType;
    private String houseID;
    private String houseNum;
    private String street;
    private String zipCode;
    
    public CreateResourcesPanel() {
        initComponents();
        
        populateCitiesTable();
    }
    
    public CreateResourcesPanel(CityDir cityDir, UserAuthDir userAuthDir, JSplitPane splitPane) {
        initComponents();
        
        this.splitPane = splitPane;
        this.cityDir = cityDir;
        this.userAuthDir = userAuthDir;
        
        ButtonGroup g1 = new ButtonGroup();
        
        g1.add(radioUrban);
        g1.add(radioRural);
        
        ButtonGroup g2 = new ButtonGroup();
        
        g2.add(radio1);
        g2.add(radio2);
        g2.add(radio3);
        
        ButtonGroup g3 = new ButtonGroup();
        
        g3.add(radioCommunity);
        g3.add(radioPrivate);
        
        populateCitiesTable();
    }
    
    private void populateCitiesTable() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        
        // House Table        
        DefaultTableModel model = (DefaultTableModel) tblCities.getModel();
        model.setRowCount(0);
        
        for(City c : cityDir.getCityDir()) {
            
            Object[] row = new Object[11];
            //row[0] = house;
            row[0] = c.getCityName();

            
            model.addRow(row);
        }
        }   
    
        private void populateCommunitiesTable(CommunityDir communityDir) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        
        DefaultTableModel model = (DefaultTableModel) tblCommunities.getModel();
        model.setRowCount(0);
        
        for(Community c : communityDir.getCommunityDir()) {
            
            Object[] row = new Object[11];
            //row[0] = house;
            row[0] = c.getCommunityName();

            
            model.addRow(row);
            
        }                
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCityName = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        btnCreateCity = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblCities = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCommunities = new javax.swing.JTable();
        btnDispCommunities = new javax.swing.JButton();
        btnBackToSysAdmin = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCommunityName = new javax.swing.JTextField();
        txtReligion = new javax.swing.JTextField();
        btnCreateComm = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        radioUrban = new javax.swing.JRadioButton();
        radioRural = new javax.swing.JRadioButton();
        btnDispCommunities1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtHospitalName = new javax.swing.JTextField();
        radio1 = new javax.swing.JRadioButton();
        radio2 = new javax.swing.JRadioButton();
        radio3 = new javax.swing.JRadioButton();
        radioCommunity = new javax.swing.JRadioButton();
        radioPrivate = new javax.swing.JRadioButton();
        btnCreateHospital = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtHouseNum = new javax.swing.JTextField();
        btnCreateHouse = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtHouseID = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtStreet = new javax.swing.JTextField();
        txtZip = new javax.swing.JTextField();

        jLabel1.setText("City Name:");

        jLabel2.setText("State:");

        btnCreateCity.setText("Create City");
        btnCreateCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateCityActionPerformed(evt);
            }
        });

        tblCities.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Cities"
            }
        ));
        jScrollPane4.setViewportView(tblCities);

        tblCommunities.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Communities"
            }
        ));
        jScrollPane3.setViewportView(tblCommunities);

        btnDispCommunities.setText("Display Communities");
        btnDispCommunities.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDispCommunitiesActionPerformed(evt);
            }
        });

        btnBackToSysAdmin.setText("Back to System Admin Panel");
        btnBackToSysAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToSysAdminActionPerformed(evt);
            }
        });

        jLabel3.setText("Community Name:");

        jLabel4.setText("Majority Religion:");

        btnCreateComm.setText("Create Community");
        btnCreateComm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateCommActionPerformed(evt);
            }
        });

        jLabel5.setText("Community Type:");

        radioUrban.setText("Urban");
        radioUrban.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioUrbanActionPerformed(evt);
            }
        });

        radioRural.setText("Rural");

        btnDispCommunities1.setText("Update Cities");
        btnDispCommunities1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDispCommunities1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Hospital Name:");

        jLabel7.setText("Rating:");

        jLabel8.setText("Hospital Type:");

        radio1.setText("1");

        radio2.setText("2");

        radio3.setText("3");

        radioCommunity.setText("Community");
        radioCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCommunityActionPerformed(evt);
            }
        });

        radioPrivate.setText("Private");

        btnCreateHospital.setText("Create Hospital");
        btnCreateHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateHospitalActionPerformed(evt);
            }
        });

        jLabel9.setText("House Number:");

        btnCreateHouse.setText("Create House");
        btnCreateHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateHouseActionPerformed(evt);
            }
        });

        jLabel12.setText("House ID:");

        jLabel13.setText("Street:");

        jLabel14.setText("Zip code:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDispCommunities1)
                        .addGap(37, 37, 37)
                        .addComponent(btnDispCommunities)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCreateCity, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(277, 277, 277)
                        .addComponent(btnCreateComm, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(92, 92, 92)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(radio1)
                                        .addGap(18, 18, 18)
                                        .addComponent(radio2)
                                        .addGap(18, 18, 18)
                                        .addComponent(radio3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(radioCommunity)
                                        .addGap(18, 18, 18)
                                        .addComponent(radioPrivate))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(btnBackToSysAdmin))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addComponent(btnCreateHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtReligion, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCommunityName, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(radioUrban)
                                        .addGap(31, 31, 31)
                                        .addComponent(radioRural))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtHouseNum, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                    .addComponent(txtHouseID)
                                    .addComponent(txtStreet)
                                    .addComponent(txtZip))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(58, 58, 58))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCreateHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(502, 502, 502))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(77, 77, 77)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(68, 68, 68)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(txtCommunityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(txtReligion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(jLabel2)
                                .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(radioUrban)
                                .addComponent(radioRural))
                            .addGap(5, 5, 5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnBackToSysAdmin)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(108, 108, 108)))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCreateComm)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDispCommunities1)
                        .addComponent(btnDispCommunities)
                        .addComponent(btnCreateCity)))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(radio1)
                                .addComponent(radio2)
                                .addComponent(radio3)
                                .addComponent(jLabel12)
                                .addComponent(txtHouseID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(txtHouseNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(radioCommunity)
                            .addComponent(radioPrivate))
                        .addGap(42, 42, 42)
                        .addComponent(btnCreateHospital))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(txtZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel13))))
                .addGap(16, 16, 16)
                .addComponent(btnCreateHouse)
                .addContainerGap(89, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDispCommunitiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDispCommunitiesActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblCities.getSelectedRow();

        if (selectedRowIndex < 0 ) {

            JOptionPane.showMessageDialog(this, "Please select a city.");
            return;
        }

        DefaultTableModel model;
        model = (DefaultTableModel) tblCities.getModel();
        String cityName = (String) model.getValueAt(selectedRowIndex, 0);

        ArrayList<City> cDir = cityDir.getCityDir();

        for(City c: cDir) {
            if(c.getCityName() == (cityName)) {
                try { populateCommunitiesTable(c.getCommunityDir()); }
                catch(Exception e) {
                    System.out.println("Community Not Added");
                }
            }
        }

    }//GEN-LAST:event_btnDispCommunitiesActionPerformed

    private void btnBackToSysAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToSysAdminActionPerformed
        // TODO add your handling code here:
        SySAdminPanel s = new SySAdminPanel(cityDir, userAuthDir, splitPane);//cityDir,uaDir);
                    
//                    setPanel(s);
//                    
                    splitPane.setRightComponent(s);
        
    }//GEN-LAST:event_btnBackToSysAdminActionPerformed

    private void btnCreateCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateCityActionPerformed
        // TODO add your handling code here:
        
        cityName = txtCityName.getText();
        state = txtState.getText();
        
        City c = cityDir.addNewCity();
        
        c.setCityName(cityName);
        c.setState(state);

    }//GEN-LAST:event_btnCreateCityActionPerformed

    private void btnCreateCommActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateCommActionPerformed
        // TODO add your handling code here:
        
        communityName = txtCommunityName.getText();
        religion = txtReligion.getText();
        
        int selectedRowIndex = tblCities.getSelectedRow();

        if (selectedRowIndex < 0 ) {

            JOptionPane.showMessageDialog(this, "Please select a city.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblCities.getModel();
        String selectedCity = (String) model.getValueAt(selectedRowIndex, 0);
        
        //Radio buttons        

        if(radioUrban.isSelected() == true) {
            communityType = "Urban Community";
        }
        else {
            communityType = "Rural Community";
        }
        
        //Traversing city dir to get the right city object
        ArrayList<City> cDir = cityDir.getCityDir();       

        for(City c: cDir) {
            if(c.getCityName() == (selectedCity)) {
                
                if(c.getCommunityDir() != null) {
                
                    CommunityDir comDir = c.getCommunityDir();

                    Community com = comDir.addNewCommunity();
                    com.setCommunityName(communityName);
                    com.setCommunityType(communityType);
                    com.setMajorityReligion(religion);

                    c.setCommunityDir(comDir);
                }
                else {
                    CommunityDir comDir = new CommunityDir();
                    
                    Community com = comDir.addNewCommunity();
                    com.setCommunityName(communityName);
                    com.setCommunityType(communityType);
                    com.setMajorityReligion(religion);
                    
                    c.setCommunityDir(comDir);
                    
                }
            }
        }
        
        
        
    }//GEN-LAST:event_btnCreateCommActionPerformed

    private void radioUrbanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioUrbanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioUrbanActionPerformed

    private void btnDispCommunities1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDispCommunities1ActionPerformed
        // TODO add your handling code here:
        populateCitiesTable();
        
    }//GEN-LAST:event_btnDispCommunities1ActionPerformed

    private void radioCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioCommunityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioCommunityActionPerformed

    private void btnCreateHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateHospitalActionPerformed
        // TODO add your handling code here:
        hospitalName = txtHospitalName.getText();
        
        //Radio buttons        

        if(radio1.isSelected() == true) {
            rating = 1;
        }
        else if(radio2.isSelected() == true) {
            rating = 2;
        }
        else {
            rating = 3;
        }
        
        if(radioCommunity.isSelected() == true) {
            hospitalType = "Community Hospital";
        }
        else {
            hospitalType = "Private Hospital";
        }
        
        
        
        int selectedRowIndex = tblCities.getSelectedRow();

        if (selectedRowIndex < 0 ) {

            JOptionPane.showMessageDialog(this, "Please select a city.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblCities.getModel();
        String selectedCity = (String) model.getValueAt(selectedRowIndex, 0);
        
        selectedRowIndex = tblCommunities.getSelectedRow();

        if (selectedRowIndex < 0 ) {

            JOptionPane.showMessageDialog(this, "Please select a community.");
            return;
        }
        
        model = (DefaultTableModel) tblCommunities.getModel();
        String selectedCommunity = (String) model.getValueAt(selectedRowIndex, 0);
        
        
        //Traversing city dir to get the right city object
        ArrayList<City> cDir = cityDir.getCityDir();       

        for(City c: cDir) {
            if(c.getCityName() == (selectedCity)) {
                CommunityDir communityDir = c.getCommunityDir();
                
                //Traversing communities to find the selected community
                ArrayList<Community> comDir = communityDir.getCommunityDir();
                
                for(Community com: comDir) {
                    if(com.getCommunityName().equalsIgnoreCase(selectedCommunity)) {

                        if(com.getHospitalDir() != null) {
                            
                            HospitalDir hospDir = com.getHospitalDir();
                            
                            Hospital h = hospDir.addNewHospital();
                            
                            h.setHospitalName(hospitalName);
                            h.setRating(rating);
                            h.setHospitalType(hospitalType);                            
                        }
                        
                        else {
                            HospitalDir hospDir = new HospitalDir();
                            
                            Hospital h = hospDir.addNewHospital();
                            
                            h.setHospitalName(hospitalName);
                            h.setRating(rating);
                            h.setHospitalType(hospitalType);  
                            
                            com.setHospitalDir(hospDir);
                        }
                        
                        //                                //Test
//                                HospitalDir hospDir = com.getHospitalDir();
//                                ArrayList<Hospital> p_temp = hospDir.getHospitalDir();
//
//                                for(Hospital p : p_temp) {
//                                    System.out.println("hospital:"+p.getHospitalName());
//                               }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnCreateHospitalActionPerformed

    private void btnCreateHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateHouseActionPerformed
        // TODO add your handling code here:
        
        houseNum = txtHouseNum.getText();
        houseID = txtHouseID.getText();
        street = txtStreet.getText();
        zipCode = txtZip.getText();
        
        int selectedRowIndex = tblCities.getSelectedRow();

        if (selectedRowIndex < 0 ) {

            JOptionPane.showMessageDialog(this, "Please select a city.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblCities.getModel();
        String selectedCity = (String) model.getValueAt(selectedRowIndex, 0);
        
        selectedRowIndex = tblCommunities.getSelectedRow();

        if (selectedRowIndex < 0 ) {

            JOptionPane.showMessageDialog(this, "Please select a community.");
            return;
        }
        
        model = (DefaultTableModel) tblCommunities.getModel();
        String selectedCommunity = (String) model.getValueAt(selectedRowIndex, 0);
        
        
        //Traversing city dir to get the right city object
        ArrayList<City> cDir = cityDir.getCityDir();       

        for(City c: cDir) {
            if(c.getCityName() == (selectedCity)) {
                CommunityDir communityDir = c.getCommunityDir();
                
                //Traversing communities to find the selected community
                ArrayList<Community> comDir = communityDir.getCommunityDir();
                
                for(Community com: comDir) {
                    if(com.getCommunityName().equalsIgnoreCase(selectedCommunity)) {

                        if(com.getHouseDir() != null) {
                            
                            HouseDir houseDir = com.getHouseDir();
                            
                            House h = houseDir.addNewHouse();
                            
                            h.setHouseID(houseID);
                            h.setHouseNum(houseNum);
                            h.setStreet(street);
                            h.setZipCode(zipCode);
                        }
                        
                        else {
                            HouseDir houseDir = new HouseDir();
                            
                            House h = houseDir.addNewHouse();
                            
                            h.setHouseID(houseID);
                            h.setHouseNum(houseNum);
                            h.setStreet(street);
                            h.setZipCode(zipCode); 
                            
                            com.setHouseDir(houseDir);
                        }
                        
                                                        //Test
                                HouseDir houseDir = com.getHouseDir();
                                ArrayList<House> p_temp = houseDir.getHouseDir();

                                for(House p : p_temp) {
                                    System.out.println("hospital:"+p.getHouseNum());
                               }
                    }
                }
            }
        }
        
    }//GEN-LAST:event_btnCreateHouseActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackToSysAdmin;
    private javax.swing.JButton btnCreateCity;
    private javax.swing.JButton btnCreateComm;
    private javax.swing.JButton btnCreateHospital;
    private javax.swing.JButton btnCreateHouse;
    private javax.swing.JButton btnDispCommunities;
    private javax.swing.JButton btnDispCommunities1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JRadioButton radio1;
    private javax.swing.JRadioButton radio2;
    private javax.swing.JRadioButton radio3;
    private javax.swing.JRadioButton radioCommunity;
    private javax.swing.JRadioButton radioPrivate;
    private javax.swing.JRadioButton radioRural;
    private javax.swing.JRadioButton radioUrban;
    private javax.swing.JTable tblCities;
    private javax.swing.JTable tblCommunities;
    private javax.swing.JTextField txtCityName;
    private javax.swing.JTextField txtCommunityName;
    private javax.swing.JTextField txtHospitalName;
    private javax.swing.JTextField txtHouseID;
    private javax.swing.JTextField txtHouseNum;
    private javax.swing.JTextField txtReligion;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtStreet;
    private javax.swing.JTextField txtZip;
    // End of variables declaration//GEN-END:variables
}
